function vgo(e){let t=e.vertices,i=e.edges,_=new Map;t.forEach(e=>{_.set(e.id,e)});let r=new Map;return t.forEach(e=>{r.set(e.id,[])}),i.forEach(e=>{r.get(e.x).push(e.y),r.get(e.y).push(e.x)}),{go_next:function(e){if(null!==this.get_vertex_by_id(e.id).value)throw"value in vertex";this.set_vertex_by_id(e);try{let t=this.get_area_by_id(e.id),i=this.get_neighbours_by_id(e.id).filter(t=>{let i=this.get_vertex_by_id(t);return null!==i.value&&i.value!==e.value}).map(e=>this.get_area_by_id(e));if(t.gases.length<=0&&Math.min(...i.map(e=>e.gases.length)))throw"no gas";i.filter(e=>0==e.gases.length).forEach(e=>{e.values.forEach(e=>{this.set_vertex_by_id({id:e,value:null})})})}catch(t){throw e.value=null,this.set_vertex_by_id(e),t}},set_vertex_by_id:function(e){this.get_vertex_by_id(e.id).value=e.value},get_vertices:function(){return t},get_edges:function(){return i},get_graph:function(){return{vertices:this.get_vertices(),edges:this.get_edges()}},get_vertex_by_id:function(e){return _.get(e)},get_neighbours_by_id:function(e){return r.get(e)},get_area_by_id:function(e){let t=new Set,i=new Set,_=e=>{let r=this.get_vertex_by_id(e);null!==r.value?(t.add(e),this.get_neighbours_by_id(e).filter(e=>{let _=this.get_vertex_by_id(e);return _.value===r.value?!1===t.has(e):null===_.value&&!1===i.has(e)}).forEach(e=>{_(e)})):i.add(e)};return _(e),{values:[...t],gases:[...i]}}}}